// 추천 시스템 테스트
//import recommend from 'collaborative-filter'
const recommend = require('collaborative-filter')

// lowCarbohydrate, lowSugar, lowFat, highProtein, noMeat
const food_characteristic = [
    // 콩고기볶음
    [0, 0, 1, 0, 1],
    // 곤약 떡볶이
    [1, 0, 0, 0, 0],
    // 땅콩100%땅콩버터
    [0, 1, 1, 0, 0],
    // 스트로베리 아몬드 키토 와플
    [1, 0, 0, 0, 0],
    // 두부면 새우 알리오올리오
    [1, 0, 0, 1, 0],
    // 고구마 맛탕
    [0, 1, 0, 0, 0],
    // 두부 마요네즈
    [0, 0, 1, 1, 0],
    // 검은콩 곤약 조림
    [1, 0, 0, 1, 0],
    // 두부강정 호두조림
    [0, 0, 0, 0, 1],
    // 곤약 들깨볶음
    [1, 1, 1, 0, 0],
    // 퀴노아 건과류 강정
    [0, 0, 0, 1, 1],
    // 메밀 샐러드
    [0, 0, 0, 1, 1],
    // 매실 탄산수
    [0, 1, 1, 0, 1],
    // 닭가슴살 냉채
    [0, 0, 1, 1, 0],
    // 후무스
    [0, 0, 1, 1, 1],
    // 귀리밥
    [1, 0, 0, 0, 1],
    // 두부면 토마토 파스타
    [1, 0, 0, 1, 0],
    // 시금치롤 샐러드
    [0, 0, 1, 0, 1],
    // 떡카롱
    [1, 1, 0, 0, 0],
    // 두부라우니
    [1, 1, 0, 0, 0],
    // 키토김밥
    [1, 0, 0, 1, 0],
    // 곤약 계란 잡채 만두
    [1, 0, 0, 0, 1],
    // 곤약 김말이
    [1, 0, 0, 0, 0],
    // 곤약 카레
    [1, 0, 1, 0, 0],
    // 닭가슴살 볶음밥
    [0, 0, 0, 1, 0],
    // 두부 유부초밥
    [1, 0, 0, 1, 1],
    // 두반장 없는 새우 마파두부
    [1, 0, 0, 1, 0],
    // 마약계란밥
    [0, 0, 0, 1, 0],
    // 우유 푸딩
    [0, 0, 1, 0, 1],
    // 두부 스테이크
    [0, 0, 1, 1, 1],
    // 콩두부 달걀말이
    [0, 0, 0, 1, 0],
    // 토마토잼
    [0, 0, 1, 0, 1],
    // 팽이버섯 덮밥
    [0, 0, 0, 1, 0],
    // 두부 탕수
    [0, 0, 1, 1, 1],
  ];

// user와 item
// 음식 순서는 DB의 food table의 id를 따름
// 10개의 임시 데이터
const user_item = [
//   0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5
    [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
    [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0],
    [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0],
    [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],
    [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0],
    [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0],
    [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
    [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
    [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  ];

// 온톨로지 생성(비슷한 목적으로 파생된 음식 묶음)
let lowCarbohydrate = [];
let lowSugar = [];
let lowFat = [];
let highProtein = [];
let noMeat = [];

for(let i = 0; i < food_characteristic.length; i++) {
    if (food_characteristic[i][0] === 1) {
        lowCarbohydrate.push(i);
    }
    if (food_characteristic[i][1] === 1) {
        lowSugar.push(i);
    }
    if (food_characteristic[i][2] === 1) {
        lowFat.push(i);
    }
    if (food_characteristic[i][3] === 1) {
        highProtein.push(i);
    }
    if (food_characteristic[i][4] === 1) {
        noMeat.push(i);
    }
}

// console.log("lowCarbohydrate>>")
// console.log(lowCarbohydrate);

// console.log("lowSugar>>")
// console.log(lowSugar);

// console.log("lowFat>>")
// console.log(lowFat);

// console.log("highProtein>>")
// console.log(highProtein);

// console.log("noMeat>>")
// console.log(noMeat);



// 협업 필터링 적용
// 반복 횟수 정해서 추천하는 항목 조절 할 수 있음
let result = []
for (let i = 0; i < 3; i++) {
    let temp = recommend.cFilter(user_item, 2)[0];
    result.push(temp)

    // 추천했던 항목을 다시 추천하는 것을 방지하기 위해 한번 추천한 항목은 1로 바꿔줌
    user_item[2][temp] = 1;
}
console.log("recommend>>")
console.log(result)